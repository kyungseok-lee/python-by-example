1. Introduction & Setup
Python 소개 및 활용 분야

Python 설치 및 환경 설정

Python 인터프리터와 실행 방법

첫 번째 Python 프로그램 (hello.py)

코딩 규칙: 들여쓰기, 주석, 파일 저장

개발 도구: VSCode, PyCharm, Jupyter Notebook

2. 기본 문법 및 데이터 타입
변수와 데이터 타입: int, float, str, bool

문자열 처리 및 포맷팅 (f-string, .format())

표준 입력/출력: input(), print()

타입 변환 및 동적 타이핑

3. 연산자
산술 연산자 (+, -, *, /, //, %, **)

비교 연산자 (==, !=, >, <, >=, <=)

논리 연산자 (and, or, not)

할당 연산자 (=, +=, -= 등)

멤버십/아이덴티티 연산자 (in, not in, is, is not)

비트 연산자 (&, |, ^, ~, <<, >>)

4. 조건문 & 반복문
조건문: if / elif / else

반복문: for 루프, while 루프

range() 사용법

제어 키워드: break, continue, pass

5. 데이터 컬렉션
리스트(List): 생성, 인덱싱, 슬라이싱, 주요 메서드

튜플(Tuple): 불변성, 언팩킹, zip() 활용

딕셔너리(Dictionary): key-value 순회, get(), keys(), values()

집합(Set): 중복 제거, 합집합/교집합/차집합

collections 모듈: defaultdict, Counter 등

6. 함수와 함수형 프로그래밍
함수 정의 및 호출

매개변수 종류: 기본값, 키워드, *args, **kwargs

반환값과 다중 리턴

람다(lambda) 표현식

클로저 및 중첩 함수

map, filter, reduce, zip

7. 예외 처리
try / except / else / finally

예외 객체 활용

사용자 정의 예외 클래스

8. 클래스와 객체지향 프로그래밍 (OOP)
클래스 정의, 생성자(__init__), 속성

self 이해하기

인스턴스 / 클래스 / @staticmethod 메서드

상속과 메서드 오버라이딩

Dunder Methods: __str__, __repr__, __eq__, __len__ 등

9. 고급 문법
컴프리헨션: 리스트·딕셔너리·집합

이터레이터: __iter__, __next__

제너레이터: yield, generator 함수

데코레이터: @decorator 작성법

컨텍스트 매니저: with 문법, __enter__/__exit__

패턴 매칭 (Python 3.10+)

10. 모듈과 패키지
표준 모듈 임포트: import, from … import

사용자 정의 모듈 및 패키지 구조 (__init__.py)

상대/절대 임포트

외부 패키지 설치: pip, venv, pipenv, poetry

11. 입출력 & 파일 처리
파일 열기/읽기/쓰기: open(), read(), write()

with 문을 통한 자원 관리

CSV, JSON, XML 다루기 (csv, json, xml.etree)

pathlib, os, shutil 활용

12. 테스트와 디버깅
단위 테스트: unittest, pytest

테스트 구조 및 assert

디버깅: pdb 사용법

로깅: logging 모듈 설정

13. 병렬 처리와 비동기
멀티스레딩: threading 모듈

멀티프로세싱: multiprocessing 모듈

비동기 처리: async / await, asyncio

concurrent.futures 활용

14. 표준 라이브러리 살펴보기
날짜/시간: datetime, time

수학/난수: math, random

이터툴: itertools, functools

정규표현식: re

collections, heapq

15. 네트워크 및 API 연동
HTTP 요청: requests 라이브러리

웹 API 사용 및 JSON 처리

웹소켓 기초

소켓 프로그래밍 기본

16. 실무 활용 예제 및 프로젝트 기초
웹 크롤러: requests + BeautifulSoup

간단한 웹 서버: Flask 또는 FastAPI 시작하기

데이터 분석 기초: pandas, matplotlib 예제

Jupyter Notebook 활용법

패키징: setup.py, pyproject.toml

코드 스타일: PEP8, Black, isort, flake8